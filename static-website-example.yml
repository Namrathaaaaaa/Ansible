---
- name: Deploy Static Website with Nginx
  hosts: webservers
  become: yes
  vars:
    website_dir: /var/www/html
    nginx_conf: /etc/nginx/sites-available/default

  tasks:
    - name: Install Nginx
      apt:
        name: nginx
        state: present
        update_cache: yes

    - name: Create website directory
      file:
        path: "{{ website_dir }}"
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'

    - name: Deploy HTML files
      copy:
        content: |
          <!DOCTYPE html>
          <html>
          <head>
              <title>My Static Website</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; }
                  h1 { color: #333; }
                  .container { max-width: 800px; margin: 0 auto; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>Welcome to My Static Website</h1>
                  <p>This website is deployed using Ansible and served by Nginx.</p>
                  <p>Server: {{ ansible_hostname }}</p>
                  <p>Deployed on: {{ ansible_date_time.date }}</p>
              </div>
          </body>
          </html>
        dest: "{{ website_dir }}/index.html"
        owner: www-data
        group: www-data
        mode: '0644'

    - name: Configure Nginx
      copy:
        content: |
          server {
              listen 80 default_server;
              listen [::]:80 default_server;
              
              root {{ website_dir }};
              index index.html;
              
              server_name _;
              
              location / {
                  try_files $uri $uri/ =404;
              }
          }
        dest: "{{ nginx_conf }}"
        backup: yes
      notify: restart nginx

    - name: Start and enable Nginx
      service:
        name: nginx
        state: started
        enabled: yes

    - name: Check if website is accessible
      uri:
        url: "http://{{ ansible_default_ipv4.address }}"
        method: GET
        status_code: 200

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted